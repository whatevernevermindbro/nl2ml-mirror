graph = {
	"import": [r'import \w+ as \w+', r'import \w+', r'from \w+ import \w+', r'from \w+ import \w+ as \w+'],

	"data_import": [r'[ ]{0,1}=[ ]{0,1}open[ ]{0,1}\(',
			r'with open[ ]{0,1}\([ ]{0,1}[\'\"]\w+.\w+[\'\"][ ]{0,1},[ ]{0,1}[\'\"]\w+[\'\"]\) as \w+[ ]{0,1}:',
			r'read_csv', r'read_fwf', r'read_json', r'read_html', r'read_clipboard', r'read_excel', r'read_hdf',
			r'read_feather', r'read_parquet', r'read_orc', r'read_msgpack', r'read_stata', r'read_sas',
			r'read_spss', r'read_pickle', r'read_sql', r'read_gbq'],
	
	"data_export": [r'to_csv', r'to_json', r'to_clipboard', r'to_excel', r'to_hdf', r'to_feather', r'to_parquet',
			r'to_msgpack',	r'to_stata', r'to_pickle', r'to_sql', r'to_gbq'],

	"preprocessing": [r'train_test_split', r'Normalizer', r'StandardScaler', r'normalize', r'scale', r'DictVectorizer',
			r'CountVectorizer', r'HashingVectorizer', r'TfidfVectorizer', r'Stemmer', r'WordNetLemmartizer',
			r'Word2Vec', r'LancasterStemmer', r'SnowballStemmer', r'PorterStemmer','stemmer', r'encode',
			r'decode', r'lemmatize', r'stem', r'minmaxscaler', r'labelencoder', r'LabelEncoder', r'concat',
			r'concatenate', r'merge', r'fill', r'fillna', r'normalize', r'crop', r'drop', r'preprocess_image',
			r'vectorizer', r'tokenizer', r'tfidf', r'replace', r'test_size', r'map', r'filter', r'getdummies',
			r'fit_transform', r'transform', r'strip', r'split', r'apply', r'dropna', r'clean', r'duplicated',
			r'drop_duplicates', r'reset_index', r'reshape', r'stemming', r'deskew', r'str.contains',
			r'augmentation', r'flatten', r'groupby', r'sort_values', r'pad', r'set_vscale', r'pivot', r'melt',
			r'sent_tokenize', r'word_tokenize', r'join', r'preprocess', r'preprocessing', r'test_split',
			r'font_scale', r'scale', r'color_continuous_scale', r'colorscale', r'preprocessor', r'rescale',
			r'reversescale', r'inverse_transform', r'simple_preprocess', r'generation', r'augmentation',
			r'lemmatization', r'scale', r'resize', r'invertxaxis', r'attention', r'polynomialfeatures', r'autoscale'],

	"visualization": [r'.subplots', r'.scatter', r'.set_title', r'.set_xlabel', r'.set_ylabel',
			r'.plot', r'.legend', r'.hist', r'.bar', r'.barh', r'.scatterplot', r'.lineplot', r'.distplot',
			r'.countplot', r'.boxplot', r'.imshow', r'.set_xticks', r'.set_yticks', r'.set_xticklabels',
			r'.set_yticklabels', r'.setp', r'.heatmap', r'.FacetGrid', r'.map', r'.kdeplot',
			r'.pairplot', r'scatter_matrix'],

	"model": [r'LinearRegression', r'RandomForest', r'Ridge', r'RidgeCV', r'RidgeClassifier', r'RidgeClassifierCV',
		r'SGD', r'LogisticRegression', r'LogisticRegressionCV', r'SVC', r'SVR', r'Layer', r'XGboost', r'LGBM',
		r'Perceptron', r'KNeighborsRegressor', r'KNeighborsClassifier', r'SGDRegressor', r'ElasticNet', r'ElasticNetCV',
		r'KMeans', r'AgglomerativeClustering', r'SpectralClustering', r'CategoricalNB', r'ComplementNB',
		r'DecisionTreeClassifier', r'DecisionTreeRegressor', r'Lasso', r'CatBoost'],

	"train": [r'.fit', r'epoch', r'loss', r'optimizer'],

	"predict": [r'.predict', r'_error', r'.mean_', r'_score', r'_distance']
}